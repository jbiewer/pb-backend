import java.nio.charset.StandardCharsets
import java.util.concurrent.TimeUnit

plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group 'com.piggybank'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    google()
}

dependencies {
    // Spring
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Firebase
    implementation 'com.google.firebase:firebase-admin:7.1.0'
    implementation 'com.google.cloud:google-cloud-firestore:2.1.0'
}

/**
 * I don't know how this works yet :(
 */
//javadoc {
//    failOnError false
//    source = sourceSets.main.allJava
//    destinationDir = reporting.file("rest-api-docs")
//    classpath = configurations.compile
//}

/**
 * Begins the firebase emulators which consists of the firestore emulator, auth emulator, etc.
 * The emulators are stored in the 'emulators' directory of this project.
 */
task startFirebaseEmulators(type: Task) {
    doFirst {
        Process emulatorProcess = new ProcessBuilder()
                .directory(file("$projectDir/emulators"))
                .redirectOutput(ProcessBuilder.Redirect.PIPE)
                .command("firebase", "emulators:start")
                .start()
        while (emulatorProcess.in.read() == 0) {
        }
        println "Firebase emulator started"
    }
}

task stopFirebaseEmulators(type: Task) {
    doLast {
        Process pidFinderProcess = new ProcessBuilder("lsof", "-t", "-i", ":9001").start()
        String pid = new String(pidFinderProcess.in.readAllBytes(), StandardCharsets.UTF_8).trim()
        if ("kill ${pid}".execute().waitFor() == 0) {
            println "Firebase emulator stopped"
        } else {
            println "No process of Firebase found"
        }
    }
}

test {
    dependsOn startFirebaseEmulators
    finalizedBy stopFirebaseEmulators
    useJUnitPlatform()
    environment "GCLOUD_PROJECT", "piggybank-104d3"
    environment "FIRESTORE_EMULATOR_HOST", "localhost:9001"
    environment "GOOGLE_APPLICATION_CREDENTIALS", "secret/pb-backend-pk.json"
}